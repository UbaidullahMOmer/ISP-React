{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { Config } from \"../../constant/Index\";\nexport const DZapi = createApi({\n  reducerPath: \"DZapi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: Config.serverUrl\n  }),\n  //******************Api Query******************//\n\n  endpoints: builder => ({\n    getAllEmployees: builder.query({\n      query: () => \"employees\"\n    }),\n    getOneEmployees: builder.query({\n      query: id => `employees/${id}`\n    }),\n    getAllPackages: builder.query({\n      query: () => \"packages\"\n    }),\n    getOnePackages: builder.query({\n      query: id => `packages/${id}`\n    }),\n    addEmployees: builder.mutation({\n      query: data => ({\n        url: `employees`,\n        method: \"POST\",\n        body: data\n      })\n    }),\n    updateEmployees: builder.mutation({\n      query: ({\n        id,\n        data\n      }) => ({\n        url: `employees/${id}`,\n        method: \"PUT\",\n        body: {\n          data: data\n        }\n      })\n    }),\n    updateEmployeesRole: builder.mutation({\n      query: ({\n        data,\n        id\n      }) => ({\n        url: `employee-roles/${id}`,\n        method: \"PUT\",\n        data: data\n      })\n    }),\n    deleteEmployees: builder.mutation({\n      query: id => ({\n        url: `employees/${id}`,\n        method: \"DELETE\"\n      })\n    }),\n    getAllEmployeesRole: builder.query({\n      query: () => \"employee-roles\"\n    })\n  })\n});\nexport const {\n  useGetAllEmployeesQuery,\n  useGetOneEmployeesQuery,\n  useAddEmployeesMutation,\n  useUpdateEmployeesMutation,\n  useDeleteEmployeesMutation,\n  useGetAllEmployeesRoleQuery,\n  useUpdateEmployeesRoleMutation,\n  useGetOnePackagesQuery,\n  useGetAllPackagesQuery,\n  useAddPackagesMutation,\n  useUpdatePackagesMutation,\n  useDeletePackagesMutation\n} = DZapi;","map":{"version":3,"names":["createApi","fetchBaseQuery","Config","DZapi","reducerPath","baseQuery","baseUrl","serverUrl","endpoints","builder","getAllEmployees","query","getOneEmployees","id","getAllPackages","getOnePackages","addEmployees","mutation","data","url","method","body","updateEmployees","updateEmployeesRole","deleteEmployees","getAllEmployeesRole","useGetAllEmployeesQuery","useGetOneEmployeesQuery","useAddEmployeesMutation","useUpdateEmployeesMutation","useDeleteEmployeesMutation","useGetAllEmployeesRoleQuery","useUpdateEmployeesRoleMutation","useGetOnePackagesQuery","useGetAllPackagesQuery","useAddPackagesMutation","useUpdatePackagesMutation","useDeletePackagesMutation"],"sources":["C:/Users/Ubaidullah/OneDrive/Documents/GitHub/ISP-React/src/App/redux/services/DZapi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { Config } from \"../../constant/Index\";\r\n\r\n\r\n\r\nexport const DZapi = createApi({\r\n  reducerPath: \"DZapi\",\r\n\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: Config.serverUrl,\r\n  }),\r\n\r\n  //******************Api Query******************//\r\n\r\n  endpoints: (builder) => ({\r\n    getAllEmployees: builder.query({query: () => \"employees\",}),\r\n    getOneEmployees: builder.query({query: (id) => `employees/${id}`,}), \r\n    getAllPackages: builder.query({query: () => \"packages\",}),\r\n    getOnePackages: builder.query({query: (id) => `packages/${id}`,}), \r\n    addEmployees: builder.mutation({\r\n      query: (data) => ({\r\n        url: `employees`,\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n    }),\r\n    updateEmployees: builder.mutation({\r\n      query: ({  id,data }) => ({\r\n        url: `employees/${id}`,\r\n        method: \"PUT\",\r\n        body: {data: data}\r\n      }),\r\n    }),\r\n    updateEmployeesRole: builder.mutation({\r\n      query: ({  data, id }) => ({\r\n        url: `employee-roles/${id}`,\r\n        method: \"PUT\",\r\n        data: data,\r\n      }),\r\n    }),\r\n    deleteEmployees: builder.mutation({\r\n      query: (id) => ({\r\n        url: `employees/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n    }),\r\n    getAllEmployeesRole: builder.query({query: () => \"employee-roles\",}),\r\n    \r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllEmployeesQuery,\r\n  useGetOneEmployeesQuery,\r\n  useAddEmployeesMutation,\r\n  useUpdateEmployeesMutation,\r\n  useDeleteEmployeesMutation,\r\n  useGetAllEmployeesRoleQuery,\r\n  useUpdateEmployeesRoleMutation,\r\n  useGetOnePackagesQuery,\r\n  useGetAllPackagesQuery,\r\n  useAddPackagesMutation,\r\n  useUpdatePackagesMutation,\r\n  useDeletePackagesMutation,\r\n} = DZapi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,SAASC,MAAM,QAAQ,sBAAsB;AAI7C,OAAO,MAAMC,KAAK,GAAGH,SAAS,CAAC;EAC7BI,WAAW,EAAE,OAAO;EAEpBC,SAAS,EAAEJ,cAAc,CAAC;IACxBK,OAAO,EAAEJ,MAAM,CAACK;EAClB,CAAC,CAAC;EAEF;;EAEAC,SAAS,EAAGC,OAAO,KAAM;IACvBC,eAAe,EAAED,OAAO,CAACE,KAAK,CAAC;MAACA,KAAK,EAAEA,CAAA,KAAM;IAAY,CAAC,CAAC;IAC3DC,eAAe,EAAEH,OAAO,CAACE,KAAK,CAAC;MAACA,KAAK,EAAGE,EAAE,IAAM,aAAYA,EAAG;IAAE,CAAC,CAAC;IACnEC,cAAc,EAAEL,OAAO,CAACE,KAAK,CAAC;MAACA,KAAK,EAAEA,CAAA,KAAM;IAAW,CAAC,CAAC;IACzDI,cAAc,EAAEN,OAAO,CAACE,KAAK,CAAC;MAACA,KAAK,EAAGE,EAAE,IAAM,YAAWA,EAAG;IAAE,CAAC,CAAC;IACjEG,YAAY,EAAEP,OAAO,CAACQ,QAAQ,CAAC;MAC7BN,KAAK,EAAGO,IAAI,KAAM;QAChBC,GAAG,EAAG,WAAU;QAChBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFI,eAAe,EAAEb,OAAO,CAACQ,QAAQ,CAAC;MAChCN,KAAK,EAAEA,CAAC;QAAGE,EAAE;QAACK;MAAK,CAAC,MAAM;QACxBC,GAAG,EAAG,aAAYN,EAAG,EAAC;QACtBO,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;UAACH,IAAI,EAAEA;QAAI;MACnB,CAAC;IACH,CAAC,CAAC;IACFK,mBAAmB,EAAEd,OAAO,CAACQ,QAAQ,CAAC;MACpCN,KAAK,EAAEA,CAAC;QAAGO,IAAI;QAAEL;MAAG,CAAC,MAAM;QACzBM,GAAG,EAAG,kBAAiBN,EAAG,EAAC;QAC3BO,MAAM,EAAE,KAAK;QACbF,IAAI,EAAEA;MACR,CAAC;IACH,CAAC,CAAC;IACFM,eAAe,EAAEf,OAAO,CAACQ,QAAQ,CAAC;MAChCN,KAAK,EAAGE,EAAE,KAAM;QACdM,GAAG,EAAG,aAAYN,EAAG,EAAC;QACtBO,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFK,mBAAmB,EAAEhB,OAAO,CAACE,KAAK,CAAC;MAACA,KAAK,EAAEA,CAAA,KAAM;IAAiB,CAAC;EAErE,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXe,uBAAuB;EACvBC,uBAAuB;EACvBC,uBAAuB;EACvBC,0BAA0B;EAC1BC,0BAA0B;EAC1BC,2BAA2B;EAC3BC,8BAA8B;EAC9BC,sBAAsB;EACtBC,sBAAsB;EACtBC,sBAAsB;EACtBC,yBAAyB;EACzBC;AACF,CAAC,GAAGlC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}